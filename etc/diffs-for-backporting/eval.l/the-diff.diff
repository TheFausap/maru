--- minimal.edited	2020-06-10 21:48:28.476932444 +0200
+++ latest	2020-06-10 20:52:05.778511341 +0200
@@ -524,7 +630,8 @@
 					 ( = ?_  c)			; _
 				    (and (<= ?a  c) (<= c ?z))		; a b c d e f g h i j k l m n o p q r s t u v w x y z
 					 ( = ?|  c)			; |
-					 ( = ?~  c)))			; ~
+					 ( = ?~  c)			; ~
+					 (<= 128 c)))			; utf-8 multibyte character
 
 (define-function new_buffer ()
   (let ((buf (malloc (size-of-structure <buffer>))))
@@ -1165,9 +1486,19 @@
 	       (free buf)
 	       result))))))
 
-(define-function subr_current_environment (args ctx)
-  env)
+(define-function subr_verbose (args ctx)
+  (let ((arg (k_car args)))
+    (if (is_long arg)
+	(set opt_verbose (get_long arg))
+      (new-<long> opt_verbose))))
+
+(define-function subr_optimised (args ctx)
+  (let ((arg (k_car args)))
+    (if (is_long arg)
+	(set opt_optimised (get_long arg))
+      (new-<long> opt_optimised))))
+
 
 ;;; ----------------------------------------------------------------
 
 
@@ -1283,9 +1650,10 @@
   (define-subr  "string->symbol"	subr_string_symbol)
   (define-subr  "symbol->string"	subr_symbol_string)
   (define-subr  "long->string"		subr_long_string)
-  (define-subr  "current-environment"	subr_current_environment)
+  (define-subr  "verbose"		subr_verbose)
+  (define-subr  "optimised"		subr_optimised)
   (define-subr  "read"			subr_read)
 
  (let ((tmp ()))
    (gc-protect (tmp)
      (while (< 0 (set argc (- argc 1)))
	(set tmp (new-<pair> () tmp))
	(set_head tmp (new-<string> (oop-at argv argc))))
      (set arguments (k_env_define (get <variable> value globals) (intern "*arguments*") tmp))))

 
   (set trace_stack (new-<array> 32))				(gc_push_root (address-of trace_stack))
